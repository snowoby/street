{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/account": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account",
                    "profile"
                ],
                "summary": "info an account",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Identity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/account/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "login an account",
                "parameters": [
                    {
                        "description": "account info",
                        "name": "accountInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.AccountForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/account/refresh": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account",
                    "token"
                ],
                "summary": "refresh token",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Token"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/account/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "register an account",
                "parameters": [
                    {
                        "description": "account info",
                        "name": "accountInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.AccountForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/episode": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episode"
                ],
                "summary": "get all episodes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/d.Episode"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episode"
                ],
                "summary": "create episode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "episode info",
                        "name": "episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.EpisodeForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Episode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/episode/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episode"
                ],
                "summary": "get episode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "episode id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/d.Episode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episode"
                ],
                "summary": "update episode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "episode id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "episode info",
                        "name": "episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.EpisodeForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/d.Episode"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episode"
                ],
                "summary": "delete one episode",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "episode id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/file/large/{pid}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "create multipart upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "file meta",
                        "name": "meta",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.FileForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/d.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/file/large/{pid}/{id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "finish multipart upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/file/large/{pid}/{id}/{part_id}": {
            "put": {
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "create multipart upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "part id",
                        "name": "part_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "file content",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/file/single/{id}": {
            "put": {
                "consumes": [
                    "application/octet-stream"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "single file content upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "file content",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/d.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/file/single/{pid}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "create single file upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "file meta",
                        "name": "meta",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.FileForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/profile": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "create profile",
                "parameters": [
                    {
                        "description": "profile info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.ProfileForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        },
        "/profile/{pid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "get profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/d.Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "update profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "profile id",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "profile info",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/d.ProfileForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/d.Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errs.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "d.Account": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "d.AccountForm": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "d.Episode": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content holds the value of the \"content\" field.",
                    "type": "string"
                },
                "cover": {
                    "description": "Cover holds the value of the \"cover\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "type": "object"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/d.Profile"
                },
                "series": {
                    "$ref": "#/definitions/d.Series"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "title": {
                    "description": "Title holds the value of the \"title\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "d.EpisodeForm": {
            "type": "object",
            "required": [
                "profileID",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "cover": {
                    "type": "string"
                },
                "profileID": {
                    "type": "string"
                },
                "seriesID": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "d.File": {
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "type": "object"
                },
                "filename": {
                    "description": "Filename holds the value of the \"filename\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "mime": {
                    "description": "Mime holds the value of the \"mime\" field.",
                    "type": "string"
                },
                "note": {
                    "description": "Note holds the value of the \"note\" field.",
                    "type": "string"
                },
                "path": {
                    "description": "Path holds the value of the \"path\" field.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "size": {
                    "description": "Size holds the value of the \"size\" field.",
                    "type": "integer"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "d.FileForm": {
            "type": "object",
            "required": [
                "category",
                "mime",
                "size"
            ],
            "properties": {
                "category": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "d.Identity": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/d.Account"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/d.Profile"
                    }
                }
            }
        },
        "d.Profile": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "Avatar holds the value of the \"avatar\" field.",
                    "type": "string"
                },
                "call": {
                    "description": "Call holds the value of the \"call\" field.",
                    "type": "string"
                },
                "category": {
                    "description": "Category holds the value of the \"category\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "type": "object"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "title": {
                    "description": "Title holds the value of the \"title\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "d.ProfileForm": {
            "type": "object",
            "required": [
                "call",
                "category",
                "title"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "call": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "d.Series": {
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "type": "object"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/d.Profile"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "title": {
                    "description": "Title holds the value of the \"title\" field.",
                    "type": "string"
                },
                "type": {
                    "description": "Type holds the value of the \"type\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "d.Token": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Body holds the value of the \"body\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "type": "object"
                },
                "expire": {
                    "description": "Expire holds the value of the \"expire\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "type": {
                    "description": "Type holds the value of the \"type\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                }
            }
        },
        "ent.Account": {
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AccountQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.AccountEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.AccountEdges": {
            "type": "object",
            "properties": {
                "file": {
                    "description": "File holds the value of the file edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.File"
                    }
                },
                "profile": {
                    "description": "Profile holds the value of the profile edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Profile"
                    }
                },
                "token": {
                    "description": "Token holds the value of the token edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Token"
                    }
                }
            }
        },
        "ent.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content holds the value of the \"content\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CommentQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.CommentEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CommentEdges": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author holds the value of the author edge.",
                    "$ref": "#/definitions/ent.Profile"
                },
                "episode": {
                    "description": "Episode holds the value of the episode edge.",
                    "$ref": "#/definitions/ent.Episode"
                }
            }
        },
        "ent.Episode": {
            "type": "object",
            "properties": {
                "content": {
                    "description": "Content holds the value of the \"content\" field.",
                    "type": "string"
                },
                "cover": {
                    "description": "Cover holds the value of the \"cover\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the EpisodeQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.EpisodeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "title": {
                    "description": "Title holds the value of the \"title\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.EpisodeEdges": {
            "type": "object",
            "properties": {
                "comments": {
                    "description": "Comments holds the value of the comments edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Comment"
                    }
                },
                "profile": {
                    "description": "Profile holds the value of the profile edge.",
                    "$ref": "#/definitions/ent.Profile"
                },
                "series": {
                    "description": "Series holds the value of the series edge.",
                    "$ref": "#/definitions/ent.Series"
                }
            }
        },
        "ent.File": {
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FileQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.FileEdges"
                },
                "filename": {
                    "description": "Filename holds the value of the \"filename\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "mime": {
                    "description": "Mime holds the value of the \"mime\" field.",
                    "type": "string"
                },
                "note": {
                    "description": "Note holds the value of the \"note\" field.",
                    "type": "string"
                },
                "path": {
                    "description": "Path holds the value of the \"path\" field.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "size": {
                    "description": "Size holds the value of the \"size\" field.",
                    "type": "integer"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.FileEdges": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Account holds the value of the account edge.",
                    "$ref": "#/definitions/ent.Account"
                }
            }
        },
        "ent.Profile": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "Avatar holds the value of the \"avatar\" field.",
                    "type": "string"
                },
                "call": {
                    "description": "Call holds the value of the \"call\" field.",
                    "type": "string"
                },
                "category": {
                    "description": "Category holds the value of the \"category\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ProfileQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.ProfileEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "title": {
                    "description": "Title holds the value of the \"title\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ProfileEdges": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Account holds the value of the account edge.",
                    "$ref": "#/definitions/ent.Account"
                },
                "commenter": {
                    "description": "Commenter holds the value of the commenter edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Comment"
                    }
                },
                "episode": {
                    "description": "Episode holds the value of the episode edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Episode"
                    }
                },
                "joined_series": {
                    "description": "JoinedSeries holds the value of the joined_series edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Series"
                    }
                },
                "series": {
                    "description": "Series holds the value of the series edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Series"
                    }
                }
            }
        },
        "ent.Series": {
            "type": "object",
            "properties": {
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the SeriesQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.SeriesEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "title": {
                    "description": "Title holds the value of the \"title\" field.",
                    "type": "string"
                },
                "type": {
                    "description": "Type holds the value of the \"type\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.SeriesEdges": {
            "type": "object",
            "properties": {
                "episodes": {
                    "description": "Episodes holds the value of the episodes edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Episode"
                    }
                },
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "$ref": "#/definitions/ent.Profile"
                },
                "participant": {
                    "description": "Participant holds the value of the participant edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Profile"
                    }
                }
            }
        },
        "ent.Token": {
            "type": "object",
            "properties": {
                "body": {
                    "description": "Body holds the value of the \"body\" field.",
                    "type": "string"
                },
                "create_time": {
                    "description": "CreateTime holds the value of the \"create_time\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TokenQuery when eager-loading is set.",
                    "$ref": "#/definitions/ent.TokenEdges"
                },
                "expire": {
                    "description": "Expire holds the value of the \"expire\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "sid": {
                    "description": "Sid holds the value of the \"sid\" field.",
                    "type": "string"
                },
                "type": {
                    "description": "Type holds the value of the \"type\" field.",
                    "type": "string"
                },
                "update_time": {
                    "description": "UpdateTime holds the value of the \"update_time\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TokenEdges": {
            "type": "object",
            "properties": {
                "account": {
                    "description": "Account holds the value of the account edge.",
                    "$ref": "#/definitions/ent.Account"
                }
            }
        },
        "errs.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}