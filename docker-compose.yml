version: "3.9"
services:
  database:
    image: "postgres:13-alpine3.15"
    restart: always
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data/dbdata/
    env_file:
      - ./.env
    volumes:
      - database_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]

  storage:
    image: "minio/minio"
    volumes:
      - storage_volume:/data
    ports:
      - "0.0.0.0:9000:9000"
      - "0.0.0.0:9001:9001"
    env_file:
      - ./.env
    command: server /data --address 0.0.0.0:9000 --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: "redis:6.2.6-alpine3.15"
    volumes:
      - redis_volume:/data

  asynqmon:
    image: "hibiken/asynqmon"
    ports:
      - "8889:8080"
    command: --redis-addr=redis:6379 --redis-db=1


  tasker:
    build:
      context: .
    command: ./street tasker 
    env_file:
      - ./.env
    restart: always
    depends_on:
      - database
      - storage
      - redis


  street:
    build: 
      context: .
    command: ./street tasker 
    env_file:
      - ./.env
    restart: always
    ports:
      - "0.0.0.0:8088:8088"
    depends_on:
      - database
      - storage
      - redis
      - tasker

volumes:
  storage_volume:
  redis_volume:
  database_volume: