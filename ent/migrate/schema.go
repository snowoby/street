// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccountsColumns holds the columns for the "accounts" table.
	AccountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "sid", Type: field.TypeInt64, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 320},
		{Name: "password", Type: field.TypeString},
	}
	// AccountsTable holds the schema information for the "accounts" table.
	AccountsTable = &schema.Table{
		Name:       "accounts",
		Columns:    AccountsColumns,
		PrimaryKey: []*schema.Column{AccountsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "account_email",
				Unique:  true,
				Columns: []*schema.Column{AccountsColumns[4]},
			},
		},
	}
	// EpisodesColumns holds the columns for the "episodes" table.
	EpisodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "sid", Type: field.TypeInt64, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "cover", Type: field.TypeString, Nullable: true, Size: 320},
		{Name: "profile_episode", Type: field.TypeUUID, Nullable: true},
		{Name: "series_episode", Type: field.TypeUUID, Nullable: true},
	}
	// EpisodesTable holds the schema information for the "episodes" table.
	EpisodesTable = &schema.Table{
		Name:       "episodes",
		Columns:    EpisodesColumns,
		PrimaryKey: []*schema.Column{EpisodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "episodes_profiles_episode",
				Columns:    []*schema.Column{EpisodesColumns[7]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "episodes_series_episode",
				Columns:    []*schema.Column{EpisodesColumns[8]},
				RefColumns: []*schema.Column{SeriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "sid", Type: field.TypeInt64, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "filename", Type: field.TypeString, Size: 320, Default: "file"},
		{Name: "path", Type: field.TypeString, Size: 64, Default: "media"},
		{Name: "mime", Type: field.TypeString, Size: 320, Default: "application/octet-stream"},
		{Name: "size", Type: field.TypeInt},
		{Name: "status", Type: field.TypeString, Size: 16, Default: "created"},
		{Name: "note", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "account_file", Type: field.TypeUUID, Nullable: true},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "files_accounts_file",
				Columns:    []*schema.Column{FilesColumns[10]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProfilesColumns holds the columns for the "profiles" table.
	ProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "sid", Type: field.TypeInt64, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "call", Type: field.TypeString, Unique: true, Size: 64},
		{Name: "category", Type: field.TypeString, Size: 16},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "account_profile", Type: field.TypeUUID, Nullable: true},
	}
	// ProfilesTable holds the schema information for the "profiles" table.
	ProfilesTable = &schema.Table{
		Name:       "profiles",
		Columns:    ProfilesColumns,
		PrimaryKey: []*schema.Column{ProfilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "profiles_accounts_profile",
				Columns:    []*schema.Column{ProfilesColumns[8]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "profile_call",
				Unique:  true,
				Columns: []*schema.Column{ProfilesColumns[5]},
			},
			{
				Name:    "profile_category",
				Unique:  false,
				Columns: []*schema.Column{ProfilesColumns[6]},
			},
		},
	}
	// SeriesColumns holds the columns for the "series" table.
	SeriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "sid", Type: field.TypeInt64, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 64},
		{Name: "call", Type: field.TypeString, Unique: true, Nullable: true, Size: 32},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "profile_series", Type: field.TypeUUID, Nullable: true},
	}
	// SeriesTable holds the schema information for the "series" table.
	SeriesTable = &schema.Table{
		Name:       "series",
		Columns:    SeriesColumns,
		PrimaryKey: []*schema.Column{SeriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "series_profiles_series",
				Columns:    []*schema.Column{SeriesColumns[7]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "series_call",
				Unique:  true,
				Columns: []*schema.Column{SeriesColumns[5]},
			},
		},
	}
	// TokensColumns holds the columns for the "tokens" table.
	TokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "sid", Type: field.TypeInt64, Unique: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "body", Type: field.TypeString, Unique: true, Size: 320},
		{Name: "type", Type: field.TypeString, Size: 16},
		{Name: "expire", Type: field.TypeTime},
		{Name: "account_token", Type: field.TypeUUID, Nullable: true},
	}
	// TokensTable holds the schema information for the "tokens" table.
	TokensTable = &schema.Table{
		Name:       "tokens",
		Columns:    TokensColumns,
		PrimaryKey: []*schema.Column{TokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tokens_accounts_token",
				Columns:    []*schema.Column{TokensColumns[7]},
				RefColumns: []*schema.Column{AccountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "token_body",
				Unique:  true,
				Columns: []*schema.Column{TokensColumns[4]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccountsTable,
		EpisodesTable,
		FilesTable,
		ProfilesTable,
		SeriesTable,
		TokensTable,
	}
)

func init() {
	EpisodesTable.ForeignKeys[0].RefTable = ProfilesTable
	EpisodesTable.ForeignKeys[1].RefTable = SeriesTable
	FilesTable.ForeignKeys[0].RefTable = AccountsTable
	ProfilesTable.ForeignKeys[0].RefTable = AccountsTable
	SeriesTable.ForeignKeys[0].RefTable = ProfilesTable
	TokensTable.ForeignKeys[0].RefTable = AccountsTable
}
